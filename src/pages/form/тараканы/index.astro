---
import { Image } from 'astro:assets';
import FormLayout from '../../../layouts/FormLayout.astro';
import { reader } from '../../../reader';
import Flex from '../../../shared/ui/Flex.astro';

const collection = await reader.collections.dangers.read('chem-opasny-tarakany-v-dome');
console.log(collection);
---

<FormLayout title='Отправить данные'>
	<Flex
		adaptive
		className='w-full gap-8 md:gap-12 lg:gap-16 p-4 md:p-8 lg:p-12 pb-0 shadow-lg rounded-2xl bg-secondary-bg/15 border-2 border-secondary-bg relative overflow-hidden'>
		<!-- <div class='max-w-[750px] flex flex-col w-full gap-8 md:gap-12 lg:gap-16'>
			<h1 class='text-2xl md:text-4xl'>Отправьте номер телефона и мы с Вами свяжемся</h1>
			<script is:inline>
				!(function (a, m, o, c, r, m) {
					(a[o + c] = a[o + c] || {
						setMeta: function (p) {
							this.params = (this.params || []).concat([p]);
						},
					}),
						(a[o + r] =
							a[o + r] ||
							function (f) {
								a[o + r].f = (a[o + r].f || []).concat([f]);
							}),
						a[o + r]({
							id: '1358266',
							hash: 'e4a32011af8c4c8c143a54ce3afbe377',
							locale: 'ru',
						}),
						(a[o + m] =
							a[o + m] ||
							function (f, k) {
								a[o + m].f = (a[o + m].f || []).concat([[f, k]]);
							});
				})(window, 0, 'amo_forms_', 'params', 'load', 'loaded');
			</script><script
				is:inline
				id='amoforms_script_1358266'
				async='async'
				charset='utf-8'
				src='https://forms.amocrm.ru/forms/assets/js/amoforms.js?1718196356'
			></script>
		</div> -->
		<form
			class='gform flex flex-col gap-8 w-full'
			method='post'
			enctype='application/x-www-form-urlencoded'
			id='contactForm'>
			<div class='space-y-4'>
				<h1 class='text-3xl md:text-4xl'>
					Возможно у вас завелись
					<span class='text-accent-secondary font-extrabold'>
						{collection?.type}!
					</span>
				</h1>
				<h2 class='text-xl md:text-2xl'>
					Укажите номер телефона, за которым будет закреплен подарок, и мы с Вами
					свяжемся.
				</h2>
			</div>
			<div class='flex flex-col'>
				<label for={'maskedInput'}>{'Номер телефона'}</label>
				<input
					class='p-4 md:p-5 rounded-2xl border border-accent-secondary'
					type='text'
					value=''
					name='phone'
					id='maskedInput'
					required
					placeholder='+7 (___)___-__-__'
				/>
			</div>
			<button
				id='myButton'
				type='submit'
				class='text-white button bg-accent rounded-full px-8 py-4 hover:bg-accent-secondary'>
				{'Заказать звонок'}
			</button>
			<div
				class='hidden'
				id='thankyou_message'>
				<h2 class='flex flex-col'>
					<em class='text bold'>Спасибо что выбрали нас!</em> Наши сотрудники свяжутся с вами
					в ближайшее время.
				</h2>
			</div>
		</form>
		<div
			class='mx-auto justify-self-end self-end w-full relative -bottom-4 md:-bottom-8 lg:-bottom-12'>
			<Image
				class={'object-cover w-full mx-auto'}
				src={collection?.img || ''}
				alt={''}
				height={'600'}
				width={'600'}
			/>
		</div>
	</Flex>
	<Flex
		adaptive={false}
		className='w-full pt-8 md:pt-12 gap-4 md:12'>
		<h2 class='text-2xl md:text-3xl'>
			Чем опасны {collection?.type}
		</h2>

		<div>
			{
				collection?.reasons.map(item => (
					<div class='flex gap-4 items-center'>
						<div class='w-4 h-4 bg-accent-secondary rounded-full' />
						<p class=' text-xl'>{item.title}</p>
					</div>
				))
			}
		</div>
	</Flex>
	<script is:inline>
		const responseContainer = document.getElementById('thankyou_message');
		document.getElementById('contactForm').addEventListener('submit', function (e) {
			e.preventDefault(); // Предотвращаем стандартную отправку формы

			const formData = new FormData(this); // Собираем данные формы
			console.log(formData);
			// Находим кнопку отправки в форме
			const submitButton = this.querySelector('button[type="submit"], input[type="submit"]');
			// Отключаем кнопку, чтобы предотвратить повторную отправку
			if (submitButton) {
				submitButton.disabled = true;
			}

			// Отправляем данные формы асинхронно
			fetch('../../sendmail.php', {
				method: 'POST',
				body: formData,
			})
				.then(() => (this.disabled = true))
				.then(() => {
					// Обрабатываем ответ от сервера
					// responseContainer.textContent = 'Ваше сообщение отправлено!';
					responseContainer.classList.remove('hidden');
					responseContainer.style = 'color: green;';
					// alert(data); // Можно заменить на более красивое отображение сообщения
					this.reset();
				})
				.catch(error => {
					console.error('Error:', error);
					responseContainer.textContent =
						'Произошла ошибка. Ваше сообщение не было отправлено! Рекомендуем позвонить нам по телефону.';
					responseContainer.classList.remove('hidden');
					responseContainer.style = 'color: red;';
					alert('Произошла ошибка при отправке формы'); // Можно заменить на более красивое отображение сообщения об ошибке
					// Включаем кнопку обратно, чтобы пользователь мог попробовать отправить форму снова
					if (submitButton) {
						submitButton.disabled = false;
					}
				});
		});
	</script>
	<style>
		button:disabled {
			background-color: gray;
			pointer-events: none;
		}
	</style>

	<!-- <Image src={'/public/DL-Turbo-Green-Smoke.webp'} width={'320'} height={'320'} alt={''}/> -->
</FormLayout>
